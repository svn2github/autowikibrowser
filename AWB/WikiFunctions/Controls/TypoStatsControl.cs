using System;
using System.Collections.Generic;
using System.Text;
using System.Windows.Forms;
using System.ComponentModel;
using WikiFunctions.Parse;

namespace WikiFunctions.Controls
{
    public class TypoStatsControl : ListView
    {
        private ContextMenuStrip contextMenu;
        private ColumnHeader columnHeader1;
        private ColumnHeader columnHeader2;
        private ColumnHeader columnHeader3;
        private ColumnHeader columnHeader4;
        private ToolStripMenuItem miCopyFind;
        private ToolStripMenuItem miCopyReplace;
        private ToolStripMenuItem miClear;
        private System.ComponentModel.IContainer components;

        public TypoStatsControl()
            : base()
        {
            InitializeComponent();
        }

        Dictionary<string, TypoStat> Data;
        /// <summary>
        /// Whether this controll accumulates statistics for the whole run
        /// </summary>
        [DefaultValue(false)]
        public bool IsOverallStats
        {
            get { return Data != null; }
            set 
            {
                if (value)
                {
                    if (Data == null) Data = new Dictionary<string, TypoStat>();
                }
                else
                    Data = null;
            }
        }

        public void ClearStats()
        {
            if (Data != null) Data.Clear();
            Items.Clear();
        }

        private void Add(TypoStat stat)
        {
        }

        // TODO: switch to Add()
        public void AddStats(IEnumerable<TypoStat> stats)
        {
            if (stats == null) return;
            BeginUpdate();
            if (IsOverallStats)
            {
                foreach (TypoStat typo in stats)
                {
                    TypoStat old;
                    if (Data.TryGetValue(typo.Find, out old))
                    {
                        old.Total += typo.Total;
                        old.SelfMatches += typo.SelfMatches;
                        old.FalsePositives += typo.FalsePositives;
                        old.ListViewItem.Refresh();
                    }
                    else
                    {
                        Data.Add(typo.Find, typo);
                        typo.ListViewItem = new TypoStatsListViewItem(typo);
                        Items.Add(typo.ListViewItem);
                    }
                }
            }
            else
            {
                Items.Clear();
                foreach (TypoStat typo in stats)
                {
                    Items.Add(new TypoStatsListViewItem(typo));
                }
            }
            EndUpdate();
        }

        #region Autogenerated stuff
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            this.contextMenu = new System.Windows.Forms.ContextMenuStrip(this.components);
            this.miCopyFind = new System.Windows.Forms.ToolStripMenuItem();
            this.miCopyReplace = new System.Windows.Forms.ToolStripMenuItem();
            this.miClear = new System.Windows.Forms.ToolStripMenuItem();
            this.columnHeader1 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader2 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader3 = new System.Windows.Forms.ColumnHeader();
            this.columnHeader4 = new System.Windows.Forms.ColumnHeader();
            this.contextMenu.SuspendLayout();
            this.SuspendLayout();
            // 
            // contextMenu
            // 
            this.contextMenu.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {
            this.miCopyFind,
            this.miCopyReplace,
            this.miClear});
            this.contextMenu.Name = "contextMenu";
            this.contextMenu.Size = new System.Drawing.Size(175, 70);
            this.contextMenu.Opening += new System.ComponentModel.CancelEventHandler(this.contextMenu_Opening);
            // 
            // miCopyFind
            // 
            this.miCopyFind.Name = "miCopyFind";
            this.miCopyFind.Size = new System.Drawing.Size(174, 22);
            this.miCopyFind.Text = "Copy &Find part";
            this.miCopyFind.Click += new System.EventHandler(this.miCopyFind_Click);
            // 
            // miCopyReplace
            // 
            this.miCopyReplace.Name = "miCopyReplace";
            this.miCopyReplace.Size = new System.Drawing.Size(174, 22);
            this.miCopyReplace.Text = "Copy &Replace part";
            this.miCopyReplace.Click += new EventHandler(miCopyReplace_Click);
            // 
            // miClear
            // 
            this.miClear.Name = "miClear";
            this.miClear.Size = new System.Drawing.Size(174, 22);
            this.miClear.Text = "&Clear statistics";
            this.miClear.Click += new EventHandler(miClear_Click);
            // 
            // columnHeader1
            // 
            this.columnHeader1.Text = "Find";
            this.columnHeader1.Width = 150;
            // 
            // columnHeader2
            // 
            this.columnHeader2.Text = "Replace";
            this.columnHeader2.Width = 150;
            // 
            // columnHeader3
            // 
            this.columnHeader3.Text = "Total";
            this.columnHeader3.Width = 50;
            // 
            // columnHeader4
            // 
            this.columnHeader4.Text = "No change";
            this.columnHeader4.Width = 50;
            // 
            // TypoStatsControl
            // 
            this.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
            this.columnHeader1,
            this.columnHeader2,
            this.columnHeader3,
            this.columnHeader4});
            this.ContextMenuStrip = this.contextMenu;
            this.MultiSelect = false;
            this.View = System.Windows.Forms.View.Details;
            this.contextMenu.ResumeLayout(false);
            this.ResumeLayout(false);

        }
        #endregion

        private void contextMenu_Opening(object sender, System.ComponentModel.CancelEventArgs e)
        {
            miCopyFind.Enabled = miCopyReplace.Enabled = SelectedItems.Count > 0;
            miClear.Visible = IsOverallStats;
        }

        void miClear_Click(object sender, EventArgs e)
        {
            ClearStats();
        }

        void miCopyReplace_Click(object sender, EventArgs e)
        {
            Clipboard.Clear();
            if (SelectedItems.Count > 0) Clipboard.SetText(SelectedItems[0].SubItems[1].Text);
        }

        void miCopyFind_Click(object sender, EventArgs e)
        {
            Clipboard.Clear();
            if (SelectedItems.Count > 0) Clipboard.SetText(SelectedItems[0].SubItems[0].Text);
        }
    }

    public class TypoStatsListViewItem : ListViewItem
    {
        public TypoStat Typo;

        public TypoStatsListViewItem(TypoStat stat)
            : base(new string[] { stat.Find, stat.Replace, "", "" })
        {
            Typo = stat;
            Refresh();
        }

        public void Refresh()
        {
            SubItems[2].Text = Typo.Total.ToString();
            SubItems[3].Text = Typo.SelfMatches.ToString();
        }
    }
}
